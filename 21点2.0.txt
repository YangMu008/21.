//结构数组：元素为结构类型的数组
#include <stdio.h>
#include <time.h>
struct
{
    char * type;
    char * card;
    int value;
}poker[]={
{"红桃","A",11},{"红桃","2",2},{"红桃","3",3},{"红桃","4",4},{"红桃","5",5},{"红桃","6",6},{"红桃","7",7},{"红桃","8",8},{"红桃","9",9},{"红桃","10",10},{"红桃","J",10},{"红桃","Q",10},{"红桃","K",10},
{"黑桃","A",11},{"黑桃","2",2},{"黑桃","3",3},{"黑桃","4",4},{"黑桃","5",5},{"黑桃","6",6},{"黑桃","7",7},{"黑桃","8",8},{"黑桃","9",9},{"黑桃","10",10},{"黑桃","J",10},{"黑桃","Q",10},{"黑桃","K",10},
{"方块","A",11},{"方块","2",2},{"方块","3",3},{"方块","4",4},{"方块","5",5},{"方块","6",6},{"方块","7",7},{"方块","8",8},{"方块","9",9},{"方块","10",10},{"方块","J",10},{"方块","Q",10},{"方块","K",10},
{"梅花","A",11},{"梅花","2",2},{"梅花","3",3},{"梅花","4",4},{"梅花","5",5},{"梅花","6",6},{"梅花","7",7},{"梅花","8",8},{"梅花","9",9},{"梅花","10",10},{"梅花","J",10},{"梅花","Q",10},{"梅花","K",10},
},temp;
int main()
{
    //实现扑克牌随机排列
    int i;//设置循环变量
    int j;//随机数0-51
    int k;//用于终结死循环
    int p1=0,p2=0;//设置玩家1和玩家2的点数变量
    char choice;//字符变量用于判断选择
    //产生随机排列的纸牌
    srand((unsigned)time(NULL));
    for(i=0;i<52;i++){
    j=rand()%52;
     temp=poker[i];
    poker[i]=poker[j];
    poker[j]=temp;
    }
    do{
//21点准备开始
   printf("*******************************************************************\n");
printf("欢迎来到21点双人对战游戏！(输入s:开始游戏;输入q:退出游戏)\n");
for(k=0;k==0;)
{
    printf("请选择：");
    fflush(stdin);//清除缓存
    scanf("%c",&choice);
switch(choice)
{
    case 's':
        printf("游戏正式开始！\n");
        k=1;
        break;
    case 'q':
        printf("游戏退出！\n");
        exit(0);
        break;
    default:
        printf("请正确输入！\n");
        break;
}
}

      printf("*******************************************************************\n");

    i=0;
    p1=poker[i].value;
    p2=poker[i+1].value;
    printf("玩家1获得了<%s%s>,点数为:%d;\n玩家2获得了<%s%s>,点数为:%d.\n",poker[i].type,poker[i].card,p1,poker[i+1].type,poker[i+1].card,p2);
    i=1;
     printf("*******************************************************************\n");
for(;k==1;)//玩家1要牌
    {
    printf("玩家1做出选择:是否继续要牌？(y:要;n:不要;q:退出)\n请输入:");
    fflush(stdin);
    scanf("%c",&choice);
    switch(choice){
case 'y':
    i++;
    p1+=poker[i].value;
    printf("玩家1获得了<%s%s>(%d点)，现在点数为:%d\n",poker[i].type,poker[i].card,poker[i].value,p1);
    break;
case 'n':
    printf("玩家1的最终点数为:%d\n",p1);
    k=0;
    break;
case 'q':
    exit(0);
    break;
default:
    printf("请正确输入！\n");
    }
        //判断玩家1是否超过21点
    if(p1>21){
        printf("玩家1点数超过21点，爆牌。玩家2获得胜利！\n");
        do{
        printf("请选择是否重新开始。(y:再来一局；n：退出）\n选择:");
        fflush(stdin);
        scanf("%c",&choice);
if(choice=='y')
{
    k=-1;
    break;
}
else if(choice=='n')
{
    exit(0);
}
else
{
    printf("请正确输入!\n");
    k=-2;
} }while (k==-2);
    }
    }
    for(;k==0;)//玩家2要牌
    {
    printf("玩家2做出选择:是否继续要牌？(y:要;n:不要;q:退出)\n请输入:");
    fflush(stdin);
    scanf("%c",&choice);
    switch(choice){
case 'y':
    i++;
    p2+=poker[i].value;
    printf("玩家2获得了<%s%s>(%d点)，现在点数为:%d\n",poker[i].type,poker[i].card,poker[i].value,p2);
    break;
case 'n':
    printf("玩家2的最终点数为:%d\n",p2);
    k=1;
    break;
case 'q':
    exit(0);
    break;
default:
    printf("请正确输入！\n");
    }
        //判断玩家2是否超过21点
    if(p2>21){
        printf("玩家2点数超过21点，爆牌。玩家1获得胜利！\n");
        do{
        printf("请选择是否重新开始。(y:再来一局；n：退出）\n选择:");
        fflush(stdin);
        scanf("%c",&choice);
if(choice=='y')
{
    k=-1;
    break;
}
else if(choice=='n')
{
    exit(0);
}
else
{
    printf("请正确输入!\n");
    k=-2;
} }while (k==-2);
    }
    }
    printf("*******************************************************************\n");
for(;k==1;)
{
if (p1>p2)
{
    printf("玩家一%d点大于玩家二%d点，玩家1获胜！\n",p1,p2);
}
else if(p1<p2)
{
    printf("玩家一%d点小于玩家二%d点，玩家2获胜！\n",p1,p2);
}
else
{
    printf("玩家1点数与玩家2相等，平局。\n");
}
printf("*******************************************************************\n");
    printf("现在显示52张牌排列顺序\n");
    for(i=0;i<52;i++)
    {
        printf("<%s%s> ",poker[i].type,poker[i].card);
    }
    printf("\n*******************************************************************\n");
     do{
        printf("\n请选择是否重新开始。(y:再来一局；n：退出）\n选择:");
        fflush(stdin);
        scanf("%c",&choice);
if(choice=='y')
{
    k=-1;
    break;
}
else if(choice=='n')
{
    exit(0);
}
else
{
    printf("请正确输入!\n");
    k=-2;
} }while (k==-2);
}}while(k==-1);
}